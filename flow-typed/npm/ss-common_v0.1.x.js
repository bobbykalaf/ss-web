// @flow 
// flow-typed signature: a550727a4968023fb45411f648395b02
// flow-typed version: <<STUB>>/ss-common_v0.1.0/flow_v0.61.0

/**
 * This is an autogenerated libdef stub for:
 *
 *   'ss-common'
 *
 * Fill this stub out by replacing all the `any` types.
 *
 * Once filled out, we encourage you to share your work with the
 * community by sending a pull request to:
 * https://github.com/flowtype/flow-typed
 */

declare module 'ss-common' {
  declare type Nullable<T> = T | void | null;
  declare function compose_forward<T, U, V>(f1: (vT: T) => U): (f2: (vU: U) => V) => (t: T) => V;
  declare module.exports = {    
    mergeRight: <T, U, V>(f1: (vT: T) => U): (f2: (vU: U) => V) => (t: T) => V,
    mergeLeft: <T, U, V>(f2: (vU: U) => V): (f1: (vT: T) => U) => (t: T) => V,
    pipeRight: <T, U>(x: T): (f1: (vT: T) => U) => U,
    pipeLeft: <T, U>(f1: (vT: T) => U): (x: T) => U
  };
}

/**
 * We include stubs for each file inside this npm package in case you need to
 * require those files directly. Feel free to delete any files that aren't
 * needed.
 */


declare module 'ss-common/src/decorators' {
  declare module.exports = {
    obsolete: () => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor,
    enumerable: () => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor,
    nonEnumerable: () => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor,
    freeze() => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor,
    virtual() => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor,
    override() => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor,
    extend(extendBy: Function) => (target: any, propertyKey: string, descriptor: PropertyDescriptor) => PropertyDescriptor
  }
}
declare module 'ss-common/src/text' {
  declare module.exports = {
    isEmpty(str?: string): boolean,
    isNotEmpty(str?: string): boolean,
    isNotNullOrEmpty(str?: string): boolean,
    capitalize(x: string): string
  }
}
declare module 'ss-common/src/list' {
  declare module.exports = {
    filterNullEmpty(list: Nullable<string>[]): string[] 
  }
}


declare module 'ss-common/src/index' {
  declare module.exports: any;
}

// Filename aliases
declare module 'ss-common/out/decorators.js' {
  declare module.exports: $Exports<'ss-common/out/decorators'>;
}
declare module 'ss-common/out/decorators.spec.js' {
  declare module.exports: $Exports<'ss-common/out/decorators.spec'>;
}
declare module 'ss-common/out/index.js' {
  declare module.exports: $Exports<'ss-common/out/index'>;
}
declare module 'ss-common/prettier.config.js' {
  declare module.exports: $Exports<'ss-common/prettier.config'>;
}
declare module 'ss-common/src/decorators.js' {
  declare module.exports: $Exports<'ss-common/src/decorators'>;
}
declare module 'ss-common/src/decorators.spec.js' {
  declare module.exports: $Exports<'ss-common/src/decorators.spec'>;
}
declare module 'ss-common/src/index.js' {
  declare module.exports: $Exports<'ss-common/src/index'>;
}
